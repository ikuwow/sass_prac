// slash commentout

/* it is included in output css */
// it is not included in output css

// data type

@import "settings";
@import "functions";

#main {
    width: 90%;
    // background: url($imgDir + "bg.png"); //concat string
    background: url("#{$imgDir}bg.png");

    // nest structure
    p {
        color: darken($brandColor, 10%); // 
        font-size: $baseFontSize; // using variable
        a {
            text-decoration: none;
            &:hover { // &: parent element
                font-weight: bold;
            }
        }
        .sub {
            font-size: $baseFontSize - 4px; // calculate variable
        }
        .big {
            font-size: #{12+12}px;
        }
    }

}

// conditional statement
.debug {
    @if variable-exists(debugMode) {
        @if $debugMode == true {
            color: red;
        } @else {
            display: none;
        }
    } @else {
        display: none;
    }
}

// loop

// .fs10 {font-size: 10px;}
@for $i from 10 through 14 {
    .fs#{$i} {
        font-size: 10px;
    }
}

$i: 10;
@while $i <= 14 {
    .fs-#{$i} {
        font-size: 10px;
    }
    $i: $i+1;
}

// List

// $animals: cat, dog, tiger;
// @each $animal in $animals {
@each $animal in cat, dog, tiger {
    .icon-#{$animal} {
        background: url("#{$animal}.png");
    }
}

.grid {
    float: left;
    width: getColumnWidth($totalWidth, $columnCount);
}

